package drools.spring.rules;

import drools.spring.example.model.ReasonInput;
import drools.spring.example.model.Disease;

rule "SelectPrehlada"
    agenda-group "diagnose"
    when
        $ri:ReasonInput($pr:(prehladaSym.doubleValue()/5), $gr:(groznicaSym.doubleValue()/7),
         $uk:(upalaKrSym.doubleValue()/8), $si:(sinfSym.doubleValue()/7))
        eval($pr >= 0.8 && $pr > $gr && $pr > $uk && $pr > $si)
    then
        System.out.println("Prehlada");
        $ri.addFirstDisease("Prehlada");
end

rule "SelectGroznica"
    agenda-group "diagnose"
    when
        $ri:ReasonInput($pr:(prehladaSym.doubleValue()/5), $gr:(groznicaSym.doubleValue()/7),
         $uk:(upalaKrSym.doubleValue()/8), $si:(sinfSym.doubleValue()/7))
        eval($gr >= (4.0/7.0) && $gr > $pr && $gr > $uk && $gr > $si)
    then
        System.out.println("Groznica");
        $ri.addFirstDisease("Groznica");
end

rule "SelectUpalaKrajnika"
    agenda-group "diagnose"
    when
        $ri:ReasonInput($pr:(prehladaSym.doubleValue()/5), $gr:(groznicaSym.doubleValue()/7),
         $uk:(upalaKrSym.doubleValue()/8), $si:(sinfSym.doubleValue()/7))
        eval($uk >= (4.0/8.0) && $uk > $pr && $uk > $gr && $uk > $si)
    then
        System.out.println("Upala krajnika");
        $ri.addFirstDisease("Upala krajnika");
end

rule "SelectSinInf"
    agenda-group "diagnose"
    when
        $ri:ReasonInput($pr:(prehladaSym.doubleValue()/5), $gr:(groznicaSym.doubleValue()/7),
         $uk:(upalaKrSym.doubleValue()/8), $si:(sinfSym.doubleValue()/7))
        eval($gr >= (4.0/7.0) && $si> $pr && $si > $uk && $si > $gr)
    then
        System.out.println("Sinusna infekcija");
        $ri.addFirstDisease("Sinusna infekcija");
end

rule "Selecthipertenziju"
    agenda-group "diagnose"
    when
        $ri:ReasonInput($br:hipertenzijaSym.intValue())
        eval($br >= 10)
    then
        System.out.println("Hipertenzija");
        $ri.addSecondDisease("Hipertenzija");
end

rule "SelectDijabetes"
    agenda-group "diagnose"
    when
        $ri:ReasonInput($br:dijabetesSym.intValue())
        eval($br == 4)
    then
        System.out.println("Dijabetes");
        $ri.addSecondDisease("Dijabetes");
end


rule "SelectHBB"
    agenda-group "diagnose"
    when
        $ri:ReasonInput($opsti:hbbSymGen.intValue(), $spec:hbbSymSpec.intValue(), thirdDisease == null)
        eval($spec >= 1 && $opsti >= 2)
    then
        System.out.println("Hronicna bubrezna bolest");
        $ri.addThirdDisease("Hronicna bubrezna bolest");
end

rule "SelectABB"
    agenda-group "diagnose"
    when
        $ri:ReasonInput($opsti:abbSymGen.intValue(), $spec:abbSymSpec.intValue(), thirdDisease == null)
        eval($spec >= 1 && $opsti >= 2)
    then
        System.out.println("Akutna bubrezna povreda");
        $ri.addThirdDisease("Akutna bubrezna povreda");
end