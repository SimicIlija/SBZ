package drools.spring.rules;

import drools.spring.example.model.ReportInput;
import drools.spring.example.model.ReasonInput;
import drools.spring.example.model.DrugType;
import drools.spring.example.model.Visit;
import drools.spring.example.model.Patient;
import drools.spring.example.model.Disease;
import drools.spring.example.model.Doctor;
import static drools.spring.example.model.ReasonInput.inLastSixMonths;
import java.util.List;
import java.util.Date;
import java.util.Set;
import java.util.HashSet;

declare PacijentBolest
    patient: Patient
    bolest: Disease
    count: Number
end

rule "hronicnaOboljenja"
    agenda-group "hronicnaOboljenja"
    when
        $p:Patient( )
        $d: Disease( )
        $ri:ReportInput( $visits: visits)
        $list: List() from collect(
        Visit( disease.name != "Prehlada" && disease.name != "Groznica" && ReportInput.inLastTwoYears(date))
        from $visits)
        $result: List() from collect(
        Visit(patient == $p && disease == $d)
        from $list)
        eval ($result.size()>=5)
    then
       System.out.println("HRONICNO");
       $ri.getHronicni().add($p.getId());
end

rule "zavisnici"
    agenda-group "zavisnici"
    when
        $ri:ReportInput( $visits: visits)
        $p : Patient()
        $list: List() from collect(
            Visit(ReasonInput.inLastSixMonths(date) && drug.drugType == DrugType.Analgesic) from $visits
        )
        $samePatient: List() from collect(
            Visit( patient == $p) from $list
        )
        eval($samePatient.size() >= 6)
        $setLekara: Set() from accumulate(
            Visit($d : doctor) from $samePatient,
            init(Set doctors = new HashSet();),
            action(doctors.add($d);),
            result(doctors)
        )
        eval ($setLekara.size() >= 3)
    then
        System.out.println("Zavisnici");
        $ri.getZavisnici().add($p.getId());
end
